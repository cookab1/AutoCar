
AutoCar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000344  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000083f  00800200  00800200  00000344  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  000003e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bc7  00000000  00000000  00000584  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011bb  00000000  00000000  0000214b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dd6  00000000  00000000  00003306  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000398  00000000  00000000  000040dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a30  00000000  00000000  00004474  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a2c  00000000  00000000  00004ea4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  000058d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	da c0       	rjmp	.+436    	; 0x1da <__vector_9>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	ef c0       	rjmp	.+478    	; 0x234 <__vector_21>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 ed       	ldi	r30, 0xD0	; 208
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	2a e0       	ldi	r18, 0x0A	; 10
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	af 33       	cpi	r26, 0x3F	; 63
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	05 d0       	rcall	.+10     	; 0x12a <main>
 120:	d5 c0       	rjmp	.+426    	; 0x2cc <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <setUp>:
	x_yield();
}

void setUp() {
	//x_init();
	initTracker();
 124:	81 d0       	rcall	.+258    	; 0x228 <initTracker>
	init_motors();
 126:	2d c0       	rjmp	.+90     	; 0x182 <init_motors>
 128:	08 95       	ret

0000012a <main>:
 12a:	fc df       	rcall	.-8      	; 0x124 <setUp>
	setUp();
	
	//initialize threads
	//x_new(1, trackListener, true);
	//x_delay(5000);
	forward1s();
 12c:	14 d0       	rcall	.+40     	; 0x156 <forward1s>
 12e:	80 e8       	ldi	r24, 0x80	; 128
	//backward1s();
	//thread 0
	DDRB = 0x80;
 130:	84 b9       	out	0x04, r24	; 4
 132:	ff cf       	rjmp	.-2      	; 0x132 <main+0x8>

00000134 <setDirectionForward>:
 134:	40 9a       	sbi	0x08, 0	; 8
	setDirectionBackward();
	rightSpeed(0xA0);
	leftSpeed(0xA0);
	//x_delay(1000);
	_delay_ms(1000);
	stop();
 136:	41 98       	cbi	0x08, 1	; 8
 138:	42 98       	cbi	0x08, 2	; 8
 13a:	43 9a       	sbi	0x08, 3	; 8
 13c:	08 95       	ret

0000013e <stop>:
 13e:	88 b1       	in	r24, 0x08	; 8
 140:	80 7f       	andi	r24, 0xF0	; 240
 142:	88 b9       	out	0x08, r24	; 8
 144:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 148:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 14c:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 150:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 154:	08 95       	ret

00000156 <forward1s>:
 156:	ee df       	rcall	.-36     	; 0x134 <setDirectionForward>
 158:	8f ef       	ldi	r24, 0xFF	; 255
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 160:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 164:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 168:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 16c:	2f ef       	ldi	r18, 0xFF	; 255
 16e:	83 e2       	ldi	r24, 0x23	; 35
 170:	94 ef       	ldi	r25, 0xF4	; 244
 172:	21 50       	subi	r18, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <forward1s+0x1c>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <forward1s+0x26>
 17c:	00 00       	nop
 17e:	df cf       	rjmp	.-66     	; 0x13e <stop>
 180:	08 95       	ret

00000182 <init_motors>:
	//porth 3 - OC4A - timer 4 - ena - pin 6
	//porte 3 - OC3A - timer 3 - enb - pin 5
	
	
	//ena, enb set to output
	DDRH |= (1 << PINH3);
 182:	e1 e0       	ldi	r30, 0x01	; 1
 184:	f1 e0       	ldi	r31, 0x01	; 1
 186:	80 81       	ld	r24, Z
 188:	88 60       	ori	r24, 0x08	; 8
 18a:	80 83       	st	Z, r24
	DDRE |= (1 << PINE3);
 18c:	6b 9a       	sbi	0x0d, 3	; 13
	//in1, in2, in3, in4 set to output
	// a8, a9, a10, a11    /   dig pin 37, 36, 35, 34   / pin 53, 54, 55, 56
	DDRC &= 0x0F;
 18e:	87 b1       	in	r24, 0x07	; 7
 190:	8f 70       	andi	r24, 0x0F	; 15
 192:	87 b9       	out	0x07, r24	; 7
	
	//////////////// PWM

	
	// set COMnA1 : set at bottom, clear at match
	TCCR4A |= (1 << COM4A1) | (1 << WGM40);
 194:	e0 ea       	ldi	r30, 0xA0	; 160
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	81 68       	ori	r24, 0x81	; 129
 19c:	80 83       	st	Z, r24
	TCCR4B |= (1 << WGM42);
 19e:	a1 ea       	ldi	r26, 0xA1	; 161
 1a0:	b0 e0       	ldi	r27, 0x00	; 0
 1a2:	8c 91       	ld	r24, X
 1a4:	88 60       	ori	r24, 0x08	; 8
 1a6:	8c 93       	st	X, r24
	
	TCCR3A |= (1 << COM3A1) | (1 << WGM30);
 1a8:	e0 e9       	ldi	r30, 0x90	; 144
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	80 81       	ld	r24, Z
 1ae:	81 68       	ori	r24, 0x81	; 129
 1b0:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM32);
 1b2:	e1 e9       	ldi	r30, 0x91	; 145
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	88 60       	ori	r24, 0x08	; 8
 1ba:	80 83       	st	Z, r24
	
	
	
	// no prescaling
	TCCR4B |= (1 << CS40);
 1bc:	8c 91       	ld	r24, X
 1be:	81 60       	ori	r24, 0x01	; 1
 1c0:	8c 93       	st	X, r24
	TCCR3B |= (1 << CS30);
 1c2:	80 81       	ld	r24, Z
 1c4:	81 60       	ori	r24, 0x01	; 1
 1c6:	80 83       	st	Z, r24
	
	//set output compare to 0
	OCR4A = 0;
 1c8:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 1cc:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	OCR3A = 0;
 1d0:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 1d4:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 1d8:	08 95       	ret

000001da <__vector_9>:
	}
	
	return min;
}

ISR(PCINT0_vect) {
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	2f 93       	push	r18
 1e6:	3f 93       	push	r19
 1e8:	8f 93       	push	r24
 1ea:	9f 93       	push	r25
	static uint16_t rising_edge = 0;
	uint16_t curr = TCNT1;
 1ec:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 1f0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
	uint8_t line = PINB & ECHO_PIN;
	
	if (line)
 1f4:	18 9b       	sbis	0x03, 0	; 3
 1f6:	05 c0       	rjmp	.+10     	; 0x202 <__vector_9+0x28>
		rising_edge = curr;
 1f8:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_end+0x1>
 1fc:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_end>
 200:	0a c0       	rjmp	.+20     	; 0x216 <__vector_9+0x3c>
	else
		reading = curr - rising_edge;
 202:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_end>
 206:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_end+0x1>
 20a:	82 1b       	sub	r24, r18
 20c:	93 0b       	sbc	r25, r19
 20e:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <reading+0x1>
 212:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <reading>
}
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	3f 91       	pop	r19
 21c:	2f 91       	pop	r18
 21e:	0f 90       	pop	r0
 220:	0f be       	out	0x3f, r0	; 63
 222:	0f 90       	pop	r0
 224:	1f 90       	pop	r1
 226:	18 95       	reti

00000228 <initTracker>:

int pinUsed;

int initTracker(int pin)
{
	pinUsed = pin;
 228:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <pinUsed+0x1>
 22c:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <pinUsed>
	DDRF = 0x00;
 230:	10 ba       	out	0x10, r1	; 16
}
 232:	08 95       	ret

00000234 <__vector_21>:
 234:	1f 92       	push	r1
 236:	0f 92       	push	r0
 238:	0f b6       	in	r0, 0x3f	; 63
 23a:	0f 92       	push	r0
 23c:	11 24       	eor	r1, r1
 23e:	0b b6       	in	r0, 0x3b	; 59
 240:	0f 92       	push	r0
 242:	2f 93       	push	r18
 244:	3f 93       	push	r19
 246:	4f 93       	push	r20
 248:	5f 93       	push	r21
 24a:	8f 93       	push	r24
 24c:	9f 93       	push	r25
 24e:	af 93       	push	r26
 250:	bf 93       	push	r27
 252:	ef 93       	push	r30
 254:	ff 93       	push	r31
 256:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <x_system_counter>
 25a:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <x_system_counter+0x1>
 25e:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <x_system_counter+0x2>
 262:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <x_system_counter+0x3>
 266:	01 96       	adiw	r24, 0x01	; 1
 268:	a1 1d       	adc	r26, r1
 26a:	b1 1d       	adc	r27, r1
 26c:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <x_system_counter>
 270:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <x_system_counter+0x1>
 274:	a0 93 06 02 	sts	0x0206, r26	; 0x800206 <x_system_counter+0x2>
 278:	b0 93 07 02 	sts	0x0207, r27	; 0x800207 <x_system_counter+0x3>
 27c:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <x_delay_status>
 280:	ed e2       	ldi	r30, 0x2D	; 45
 282:	fa e0       	ldi	r31, 0x0A	; 10
 284:	4d e3       	ldi	r20, 0x3D	; 61
 286:	5a e0       	ldi	r21, 0x0A	; 10
 288:	21 e0       	ldi	r18, 0x01	; 1
 28a:	80 81       	ld	r24, Z
 28c:	91 81       	ldd	r25, Z+1	; 0x01
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	81 93       	st	Z+, r24
 292:	91 93       	st	Z+, r25
 294:	89 2b       	or	r24, r25
 296:	19 f4       	brne	.+6      	; 0x29e <__vector_21+0x6a>
 298:	82 2f       	mov	r24, r18
 29a:	80 95       	com	r24
 29c:	38 23       	and	r19, r24
 29e:	22 0f       	add	r18, r18
 2a0:	e4 17       	cp	r30, r20
 2a2:	f5 07       	cpc	r31, r21
 2a4:	91 f7       	brne	.-28     	; 0x28a <__vector_21+0x56>
 2a6:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <x_delay_status>
 2aa:	ff 91       	pop	r31
 2ac:	ef 91       	pop	r30
 2ae:	bf 91       	pop	r27
 2b0:	af 91       	pop	r26
 2b2:	9f 91       	pop	r25
 2b4:	8f 91       	pop	r24
 2b6:	5f 91       	pop	r21
 2b8:	4f 91       	pop	r20
 2ba:	3f 91       	pop	r19
 2bc:	2f 91       	pop	r18
 2be:	0f 90       	pop	r0
 2c0:	0b be       	out	0x3b, r0	; 59
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <_exit>:
 2cc:	f8 94       	cli

000002ce <__stop_program>:
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <__stop_program>
